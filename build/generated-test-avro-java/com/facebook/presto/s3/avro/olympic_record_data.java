/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.facebook.presto.s3.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class olympic_record_data extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4423513942430272937L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"olympic_record_data\",\"namespace\":\"com.facebook.presto.s3.avro\",\"fields\":[{\"name\":\"ID\",\"type\":\"string\"},{\"name\":\"Name\",\"type\":\"string\"},{\"name\":\"Sex\",\"type\":\"string\"},{\"name\":\"Age\",\"type\":\"int\",\"default\":0},{\"name\":\"Height\",\"type\":\"int\",\"default\":0},{\"name\":\"Weight\",\"type\":\"int\",\"default\":0},{\"name\":\"Team\",\"type\":\"string\"},{\"name\":\"NOC\",\"type\":\"string\"},{\"name\":\"Games\",\"type\":\"string\"},{\"name\":\"Year\",\"type\":\"int\",\"default\":0},{\"name\":\"Season\",\"type\":\"string\"},{\"name\":\"City\",\"type\":\"string\"},{\"name\":\"Sport\",\"type\":\"string\"},{\"name\":\"Event\",\"type\":\"string\"},{\"name\":\"Medal\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<olympic_record_data> ENCODER =
      new BinaryMessageEncoder<olympic_record_data>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<olympic_record_data> DECODER =
      new BinaryMessageDecoder<olympic_record_data>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<olympic_record_data> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<olympic_record_data> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<olympic_record_data> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<olympic_record_data>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this olympic_record_data to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a olympic_record_data from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a olympic_record_data instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static olympic_record_data fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence ID;
  @Deprecated public java.lang.CharSequence Name;
  @Deprecated public java.lang.CharSequence Sex;
  @Deprecated public int Age;
  @Deprecated public int Height;
  @Deprecated public int Weight;
  @Deprecated public java.lang.CharSequence Team;
  @Deprecated public java.lang.CharSequence NOC;
  @Deprecated public java.lang.CharSequence Games;
  @Deprecated public int Year;
  @Deprecated public java.lang.CharSequence Season;
  @Deprecated public java.lang.CharSequence City;
  @Deprecated public java.lang.CharSequence Sport;
  @Deprecated public java.lang.CharSequence Event;
  @Deprecated public java.lang.CharSequence Medal;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public olympic_record_data() {}

  /**
   * All-args constructor.
   * @param ID The new value for ID
   * @param Name The new value for Name
   * @param Sex The new value for Sex
   * @param Age The new value for Age
   * @param Height The new value for Height
   * @param Weight The new value for Weight
   * @param Team The new value for Team
   * @param NOC The new value for NOC
   * @param Games The new value for Games
   * @param Year The new value for Year
   * @param Season The new value for Season
   * @param City The new value for City
   * @param Sport The new value for Sport
   * @param Event The new value for Event
   * @param Medal The new value for Medal
   */
  public olympic_record_data(java.lang.CharSequence ID, java.lang.CharSequence Name, java.lang.CharSequence Sex, java.lang.Integer Age, java.lang.Integer Height, java.lang.Integer Weight, java.lang.CharSequence Team, java.lang.CharSequence NOC, java.lang.CharSequence Games, java.lang.Integer Year, java.lang.CharSequence Season, java.lang.CharSequence City, java.lang.CharSequence Sport, java.lang.CharSequence Event, java.lang.CharSequence Medal) {
    this.ID = ID;
    this.Name = Name;
    this.Sex = Sex;
    this.Age = Age;
    this.Height = Height;
    this.Weight = Weight;
    this.Team = Team;
    this.NOC = NOC;
    this.Games = Games;
    this.Year = Year;
    this.Season = Season;
    this.City = City;
    this.Sport = Sport;
    this.Event = Event;
    this.Medal = Medal;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ID;
    case 1: return Name;
    case 2: return Sex;
    case 3: return Age;
    case 4: return Height;
    case 5: return Weight;
    case 6: return Team;
    case 7: return NOC;
    case 8: return Games;
    case 9: return Year;
    case 10: return Season;
    case 11: return City;
    case 12: return Sport;
    case 13: return Event;
    case 14: return Medal;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ID = (java.lang.CharSequence)value$; break;
    case 1: Name = (java.lang.CharSequence)value$; break;
    case 2: Sex = (java.lang.CharSequence)value$; break;
    case 3: Age = (java.lang.Integer)value$; break;
    case 4: Height = (java.lang.Integer)value$; break;
    case 5: Weight = (java.lang.Integer)value$; break;
    case 6: Team = (java.lang.CharSequence)value$; break;
    case 7: NOC = (java.lang.CharSequence)value$; break;
    case 8: Games = (java.lang.CharSequence)value$; break;
    case 9: Year = (java.lang.Integer)value$; break;
    case 10: Season = (java.lang.CharSequence)value$; break;
    case 11: City = (java.lang.CharSequence)value$; break;
    case 12: Sport = (java.lang.CharSequence)value$; break;
    case 13: Event = (java.lang.CharSequence)value$; break;
    case 14: Medal = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'ID' field.
   * @return The value of the 'ID' field.
   */
  public java.lang.CharSequence getID() {
    return ID;
  }


  /**
   * Sets the value of the 'ID' field.
   * @param value the value to set.
   */
  public void setID(java.lang.CharSequence value) {
    this.ID = value;
  }

  /**
   * Gets the value of the 'Name' field.
   * @return The value of the 'Name' field.
   */
  public java.lang.CharSequence getName() {
    return Name;
  }


  /**
   * Sets the value of the 'Name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.Name = value;
  }

  /**
   * Gets the value of the 'Sex' field.
   * @return The value of the 'Sex' field.
   */
  public java.lang.CharSequence getSex() {
    return Sex;
  }


  /**
   * Sets the value of the 'Sex' field.
   * @param value the value to set.
   */
  public void setSex(java.lang.CharSequence value) {
    this.Sex = value;
  }

  /**
   * Gets the value of the 'Age' field.
   * @return The value of the 'Age' field.
   */
  public int getAge() {
    return Age;
  }


  /**
   * Sets the value of the 'Age' field.
   * @param value the value to set.
   */
  public void setAge(int value) {
    this.Age = value;
  }

  /**
   * Gets the value of the 'Height' field.
   * @return The value of the 'Height' field.
   */
  public int getHeight() {
    return Height;
  }


  /**
   * Sets the value of the 'Height' field.
   * @param value the value to set.
   */
  public void setHeight(int value) {
    this.Height = value;
  }

  /**
   * Gets the value of the 'Weight' field.
   * @return The value of the 'Weight' field.
   */
  public int getWeight() {
    return Weight;
  }


  /**
   * Sets the value of the 'Weight' field.
   * @param value the value to set.
   */
  public void setWeight(int value) {
    this.Weight = value;
  }

  /**
   * Gets the value of the 'Team' field.
   * @return The value of the 'Team' field.
   */
  public java.lang.CharSequence getTeam() {
    return Team;
  }


  /**
   * Sets the value of the 'Team' field.
   * @param value the value to set.
   */
  public void setTeam(java.lang.CharSequence value) {
    this.Team = value;
  }

  /**
   * Gets the value of the 'NOC' field.
   * @return The value of the 'NOC' field.
   */
  public java.lang.CharSequence getNOC() {
    return NOC;
  }


  /**
   * Sets the value of the 'NOC' field.
   * @param value the value to set.
   */
  public void setNOC(java.lang.CharSequence value) {
    this.NOC = value;
  }

  /**
   * Gets the value of the 'Games' field.
   * @return The value of the 'Games' field.
   */
  public java.lang.CharSequence getGames() {
    return Games;
  }


  /**
   * Sets the value of the 'Games' field.
   * @param value the value to set.
   */
  public void setGames(java.lang.CharSequence value) {
    this.Games = value;
  }

  /**
   * Gets the value of the 'Year' field.
   * @return The value of the 'Year' field.
   */
  public int getYear() {
    return Year;
  }


  /**
   * Sets the value of the 'Year' field.
   * @param value the value to set.
   */
  public void setYear(int value) {
    this.Year = value;
  }

  /**
   * Gets the value of the 'Season' field.
   * @return The value of the 'Season' field.
   */
  public java.lang.CharSequence getSeason() {
    return Season;
  }


  /**
   * Sets the value of the 'Season' field.
   * @param value the value to set.
   */
  public void setSeason(java.lang.CharSequence value) {
    this.Season = value;
  }

  /**
   * Gets the value of the 'City' field.
   * @return The value of the 'City' field.
   */
  public java.lang.CharSequence getCity() {
    return City;
  }


  /**
   * Sets the value of the 'City' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.CharSequence value) {
    this.City = value;
  }

  /**
   * Gets the value of the 'Sport' field.
   * @return The value of the 'Sport' field.
   */
  public java.lang.CharSequence getSport() {
    return Sport;
  }


  /**
   * Sets the value of the 'Sport' field.
   * @param value the value to set.
   */
  public void setSport(java.lang.CharSequence value) {
    this.Sport = value;
  }

  /**
   * Gets the value of the 'Event' field.
   * @return The value of the 'Event' field.
   */
  public java.lang.CharSequence getEvent() {
    return Event;
  }


  /**
   * Sets the value of the 'Event' field.
   * @param value the value to set.
   */
  public void setEvent(java.lang.CharSequence value) {
    this.Event = value;
  }

  /**
   * Gets the value of the 'Medal' field.
   * @return The value of the 'Medal' field.
   */
  public java.lang.CharSequence getMedal() {
    return Medal;
  }


  /**
   * Sets the value of the 'Medal' field.
   * @param value the value to set.
   */
  public void setMedal(java.lang.CharSequence value) {
    this.Medal = value;
  }

  /**
   * Creates a new olympic_record_data RecordBuilder.
   * @return A new olympic_record_data RecordBuilder
   */
  public static com.facebook.presto.s3.avro.olympic_record_data.Builder newBuilder() {
    return new com.facebook.presto.s3.avro.olympic_record_data.Builder();
  }

  /**
   * Creates a new olympic_record_data RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new olympic_record_data RecordBuilder
   */
  public static com.facebook.presto.s3.avro.olympic_record_data.Builder newBuilder(com.facebook.presto.s3.avro.olympic_record_data.Builder other) {
    if (other == null) {
      return new com.facebook.presto.s3.avro.olympic_record_data.Builder();
    } else {
      return new com.facebook.presto.s3.avro.olympic_record_data.Builder(other);
    }
  }

  /**
   * Creates a new olympic_record_data RecordBuilder by copying an existing olympic_record_data instance.
   * @param other The existing instance to copy.
   * @return A new olympic_record_data RecordBuilder
   */
  public static com.facebook.presto.s3.avro.olympic_record_data.Builder newBuilder(com.facebook.presto.s3.avro.olympic_record_data other) {
    if (other == null) {
      return new com.facebook.presto.s3.avro.olympic_record_data.Builder();
    } else {
      return new com.facebook.presto.s3.avro.olympic_record_data.Builder(other);
    }
  }

  /**
   * RecordBuilder for olympic_record_data instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<olympic_record_data>
    implements org.apache.avro.data.RecordBuilder<olympic_record_data> {

    private java.lang.CharSequence ID;
    private java.lang.CharSequence Name;
    private java.lang.CharSequence Sex;
    private int Age;
    private int Height;
    private int Weight;
    private java.lang.CharSequence Team;
    private java.lang.CharSequence NOC;
    private java.lang.CharSequence Games;
    private int Year;
    private java.lang.CharSequence Season;
    private java.lang.CharSequence City;
    private java.lang.CharSequence Sport;
    private java.lang.CharSequence Event;
    private java.lang.CharSequence Medal;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.facebook.presto.s3.avro.olympic_record_data.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ID)) {
        this.ID = data().deepCopy(fields()[0].schema(), other.ID);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.Name)) {
        this.Name = data().deepCopy(fields()[1].schema(), other.Name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.Sex)) {
        this.Sex = data().deepCopy(fields()[2].schema(), other.Sex);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.Age)) {
        this.Age = data().deepCopy(fields()[3].schema(), other.Age);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.Height)) {
        this.Height = data().deepCopy(fields()[4].schema(), other.Height);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.Weight)) {
        this.Weight = data().deepCopy(fields()[5].schema(), other.Weight);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.Team)) {
        this.Team = data().deepCopy(fields()[6].schema(), other.Team);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.NOC)) {
        this.NOC = data().deepCopy(fields()[7].schema(), other.NOC);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.Games)) {
        this.Games = data().deepCopy(fields()[8].schema(), other.Games);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.Year)) {
        this.Year = data().deepCopy(fields()[9].schema(), other.Year);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.Season)) {
        this.Season = data().deepCopy(fields()[10].schema(), other.Season);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.City)) {
        this.City = data().deepCopy(fields()[11].schema(), other.City);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.Sport)) {
        this.Sport = data().deepCopy(fields()[12].schema(), other.Sport);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.Event)) {
        this.Event = data().deepCopy(fields()[13].schema(), other.Event);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.Medal)) {
        this.Medal = data().deepCopy(fields()[14].schema(), other.Medal);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
    }

    /**
     * Creates a Builder by copying an existing olympic_record_data instance
     * @param other The existing instance to copy.
     */
    private Builder(com.facebook.presto.s3.avro.olympic_record_data other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.ID)) {
        this.ID = data().deepCopy(fields()[0].schema(), other.ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Name)) {
        this.Name = data().deepCopy(fields()[1].schema(), other.Name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Sex)) {
        this.Sex = data().deepCopy(fields()[2].schema(), other.Sex);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.Age)) {
        this.Age = data().deepCopy(fields()[3].schema(), other.Age);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Height)) {
        this.Height = data().deepCopy(fields()[4].schema(), other.Height);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Weight)) {
        this.Weight = data().deepCopy(fields()[5].schema(), other.Weight);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.Team)) {
        this.Team = data().deepCopy(fields()[6].schema(), other.Team);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.NOC)) {
        this.NOC = data().deepCopy(fields()[7].schema(), other.NOC);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.Games)) {
        this.Games = data().deepCopy(fields()[8].schema(), other.Games);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.Year)) {
        this.Year = data().deepCopy(fields()[9].schema(), other.Year);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.Season)) {
        this.Season = data().deepCopy(fields()[10].schema(), other.Season);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.City)) {
        this.City = data().deepCopy(fields()[11].schema(), other.City);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.Sport)) {
        this.Sport = data().deepCopy(fields()[12].schema(), other.Sport);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.Event)) {
        this.Event = data().deepCopy(fields()[13].schema(), other.Event);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.Medal)) {
        this.Medal = data().deepCopy(fields()[14].schema(), other.Medal);
        fieldSetFlags()[14] = true;
      }
    }

    /**
      * Gets the value of the 'ID' field.
      * @return The value.
      */
    public java.lang.CharSequence getID() {
      return ID;
    }


    /**
      * Sets the value of the 'ID' field.
      * @param value The value of 'ID'.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder setID(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.ID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'ID' field has been set.
      * @return True if the 'ID' field has been set, false otherwise.
      */
    public boolean hasID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'ID' field.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder clearID() {
      ID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'Name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return Name;
    }


    /**
      * Sets the value of the 'Name' field.
      * @param value The value of 'Name'.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.Name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'Name' field has been set.
      * @return True if the 'Name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'Name' field.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder clearName() {
      Name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'Sex' field.
      * @return The value.
      */
    public java.lang.CharSequence getSex() {
      return Sex;
    }


    /**
      * Sets the value of the 'Sex' field.
      * @param value The value of 'Sex'.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder setSex(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.Sex = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'Sex' field has been set.
      * @return True if the 'Sex' field has been set, false otherwise.
      */
    public boolean hasSex() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'Sex' field.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder clearSex() {
      Sex = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'Age' field.
      * @return The value.
      */
    public int getAge() {
      return Age;
    }


    /**
      * Sets the value of the 'Age' field.
      * @param value The value of 'Age'.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder setAge(int value) {
      validate(fields()[3], value);
      this.Age = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'Age' field has been set.
      * @return True if the 'Age' field has been set, false otherwise.
      */
    public boolean hasAge() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'Age' field.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder clearAge() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'Height' field.
      * @return The value.
      */
    public int getHeight() {
      return Height;
    }


    /**
      * Sets the value of the 'Height' field.
      * @param value The value of 'Height'.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder setHeight(int value) {
      validate(fields()[4], value);
      this.Height = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'Height' field has been set.
      * @return True if the 'Height' field has been set, false otherwise.
      */
    public boolean hasHeight() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'Height' field.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder clearHeight() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'Weight' field.
      * @return The value.
      */
    public int getWeight() {
      return Weight;
    }


    /**
      * Sets the value of the 'Weight' field.
      * @param value The value of 'Weight'.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder setWeight(int value) {
      validate(fields()[5], value);
      this.Weight = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'Weight' field has been set.
      * @return True if the 'Weight' field has been set, false otherwise.
      */
    public boolean hasWeight() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'Weight' field.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder clearWeight() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'Team' field.
      * @return The value.
      */
    public java.lang.CharSequence getTeam() {
      return Team;
    }


    /**
      * Sets the value of the 'Team' field.
      * @param value The value of 'Team'.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder setTeam(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.Team = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'Team' field has been set.
      * @return True if the 'Team' field has been set, false otherwise.
      */
    public boolean hasTeam() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'Team' field.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder clearTeam() {
      Team = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'NOC' field.
      * @return The value.
      */
    public java.lang.CharSequence getNOC() {
      return NOC;
    }


    /**
      * Sets the value of the 'NOC' field.
      * @param value The value of 'NOC'.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder setNOC(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.NOC = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'NOC' field has been set.
      * @return True if the 'NOC' field has been set, false otherwise.
      */
    public boolean hasNOC() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'NOC' field.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder clearNOC() {
      NOC = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'Games' field.
      * @return The value.
      */
    public java.lang.CharSequence getGames() {
      return Games;
    }


    /**
      * Sets the value of the 'Games' field.
      * @param value The value of 'Games'.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder setGames(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.Games = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'Games' field has been set.
      * @return True if the 'Games' field has been set, false otherwise.
      */
    public boolean hasGames() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'Games' field.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder clearGames() {
      Games = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'Year' field.
      * @return The value.
      */
    public int getYear() {
      return Year;
    }


    /**
      * Sets the value of the 'Year' field.
      * @param value The value of 'Year'.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder setYear(int value) {
      validate(fields()[9], value);
      this.Year = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'Year' field has been set.
      * @return True if the 'Year' field has been set, false otherwise.
      */
    public boolean hasYear() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'Year' field.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder clearYear() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'Season' field.
      * @return The value.
      */
    public java.lang.CharSequence getSeason() {
      return Season;
    }


    /**
      * Sets the value of the 'Season' field.
      * @param value The value of 'Season'.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder setSeason(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.Season = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'Season' field has been set.
      * @return True if the 'Season' field has been set, false otherwise.
      */
    public boolean hasSeason() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'Season' field.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder clearSeason() {
      Season = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'City' field.
      * @return The value.
      */
    public java.lang.CharSequence getCity() {
      return City;
    }


    /**
      * Sets the value of the 'City' field.
      * @param value The value of 'City'.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder setCity(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.City = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'City' field has been set.
      * @return True if the 'City' field has been set, false otherwise.
      */
    public boolean hasCity() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'City' field.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder clearCity() {
      City = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'Sport' field.
      * @return The value.
      */
    public java.lang.CharSequence getSport() {
      return Sport;
    }


    /**
      * Sets the value of the 'Sport' field.
      * @param value The value of 'Sport'.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder setSport(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.Sport = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'Sport' field has been set.
      * @return True if the 'Sport' field has been set, false otherwise.
      */
    public boolean hasSport() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'Sport' field.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder clearSport() {
      Sport = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'Event' field.
      * @return The value.
      */
    public java.lang.CharSequence getEvent() {
      return Event;
    }


    /**
      * Sets the value of the 'Event' field.
      * @param value The value of 'Event'.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder setEvent(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.Event = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'Event' field has been set.
      * @return True if the 'Event' field has been set, false otherwise.
      */
    public boolean hasEvent() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'Event' field.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder clearEvent() {
      Event = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'Medal' field.
      * @return The value.
      */
    public java.lang.CharSequence getMedal() {
      return Medal;
    }


    /**
      * Sets the value of the 'Medal' field.
      * @param value The value of 'Medal'.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder setMedal(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.Medal = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'Medal' field has been set.
      * @return True if the 'Medal' field has been set, false otherwise.
      */
    public boolean hasMedal() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'Medal' field.
      * @return This builder.
      */
    public com.facebook.presto.s3.avro.olympic_record_data.Builder clearMedal() {
      Medal = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public olympic_record_data build() {
      try {
        olympic_record_data record = new olympic_record_data();
        record.ID = fieldSetFlags()[0] ? this.ID : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.Name = fieldSetFlags()[1] ? this.Name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.Sex = fieldSetFlags()[2] ? this.Sex : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.Age = fieldSetFlags()[3] ? this.Age : (java.lang.Integer) defaultValue(fields()[3]);
        record.Height = fieldSetFlags()[4] ? this.Height : (java.lang.Integer) defaultValue(fields()[4]);
        record.Weight = fieldSetFlags()[5] ? this.Weight : (java.lang.Integer) defaultValue(fields()[5]);
        record.Team = fieldSetFlags()[6] ? this.Team : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.NOC = fieldSetFlags()[7] ? this.NOC : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.Games = fieldSetFlags()[8] ? this.Games : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.Year = fieldSetFlags()[9] ? this.Year : (java.lang.Integer) defaultValue(fields()[9]);
        record.Season = fieldSetFlags()[10] ? this.Season : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.City = fieldSetFlags()[11] ? this.City : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.Sport = fieldSetFlags()[12] ? this.Sport : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.Event = fieldSetFlags()[13] ? this.Event : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.Medal = fieldSetFlags()[14] ? this.Medal : (java.lang.CharSequence) defaultValue(fields()[14]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<olympic_record_data>
    WRITER$ = (org.apache.avro.io.DatumWriter<olympic_record_data>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<olympic_record_data>
    READER$ = (org.apache.avro.io.DatumReader<olympic_record_data>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.ID);

    out.writeString(this.Name);

    out.writeString(this.Sex);

    out.writeInt(this.Age);

    out.writeInt(this.Height);

    out.writeInt(this.Weight);

    out.writeString(this.Team);

    out.writeString(this.NOC);

    out.writeString(this.Games);

    out.writeInt(this.Year);

    out.writeString(this.Season);

    out.writeString(this.City);

    out.writeString(this.Sport);

    out.writeString(this.Event);

    out.writeString(this.Medal);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.ID = in.readString(this.ID instanceof Utf8 ? (Utf8)this.ID : null);

      this.Name = in.readString(this.Name instanceof Utf8 ? (Utf8)this.Name : null);

      this.Sex = in.readString(this.Sex instanceof Utf8 ? (Utf8)this.Sex : null);

      this.Age = in.readInt();

      this.Height = in.readInt();

      this.Weight = in.readInt();

      this.Team = in.readString(this.Team instanceof Utf8 ? (Utf8)this.Team : null);

      this.NOC = in.readString(this.NOC instanceof Utf8 ? (Utf8)this.NOC : null);

      this.Games = in.readString(this.Games instanceof Utf8 ? (Utf8)this.Games : null);

      this.Year = in.readInt();

      this.Season = in.readString(this.Season instanceof Utf8 ? (Utf8)this.Season : null);

      this.City = in.readString(this.City instanceof Utf8 ? (Utf8)this.City : null);

      this.Sport = in.readString(this.Sport instanceof Utf8 ? (Utf8)this.Sport : null);

      this.Event = in.readString(this.Event instanceof Utf8 ? (Utf8)this.Event : null);

      this.Medal = in.readString(this.Medal instanceof Utf8 ? (Utf8)this.Medal : null);

    } else {
      for (int i = 0; i < 15; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.ID = in.readString(this.ID instanceof Utf8 ? (Utf8)this.ID : null);
          break;

        case 1:
          this.Name = in.readString(this.Name instanceof Utf8 ? (Utf8)this.Name : null);
          break;

        case 2:
          this.Sex = in.readString(this.Sex instanceof Utf8 ? (Utf8)this.Sex : null);
          break;

        case 3:
          this.Age = in.readInt();
          break;

        case 4:
          this.Height = in.readInt();
          break;

        case 5:
          this.Weight = in.readInt();
          break;

        case 6:
          this.Team = in.readString(this.Team instanceof Utf8 ? (Utf8)this.Team : null);
          break;

        case 7:
          this.NOC = in.readString(this.NOC instanceof Utf8 ? (Utf8)this.NOC : null);
          break;

        case 8:
          this.Games = in.readString(this.Games instanceof Utf8 ? (Utf8)this.Games : null);
          break;

        case 9:
          this.Year = in.readInt();
          break;

        case 10:
          this.Season = in.readString(this.Season instanceof Utf8 ? (Utf8)this.Season : null);
          break;

        case 11:
          this.City = in.readString(this.City instanceof Utf8 ? (Utf8)this.City : null);
          break;

        case 12:
          this.Sport = in.readString(this.Sport instanceof Utf8 ? (Utf8)this.Sport : null);
          break;

        case 13:
          this.Event = in.readString(this.Event instanceof Utf8 ? (Utf8)this.Event : null);
          break;

        case 14:
          this.Medal = in.readString(this.Medal instanceof Utf8 ? (Utf8)this.Medal : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










