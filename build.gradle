/*
 * Build gradle file for the Pravega connector
 */

plugins {
    id 'java'
    id 'distribution'
    id 'maven'
}

apply from: "$rootDir/gradle/checkstyle.gradle"

repositories {
    mavenLocal()

    maven {
        url = uri('https://oss.jfrog.org/jfrog-dependencies')
    }

    maven {
        url = uri('https://jitpack.io')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2')
    }
}

dependencies {
    compile 'org.glassfish.hk2.external:jakarta.inject:2.6.1'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.30'
    compile 'org.glassfish.jersey.core:jersey-common:2.30'
    compile 'org.glassfish.jersey.ext:jersey-proxy-client:2.30'
    compile 'org.glassfish.jersey.core:jersey-client:2.30'
    compile 'org.glassfish.jersey.inject:jersey-hk2:2.30'
    compile 'jakarta.validation:jakarta.validation-api:2.0.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.10.0'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.10.0'
    compile 'com.facebook.airlift:bootstrap:0.198'
    compile 'com.facebook.airlift:json:0.198'
    compile 'com.facebook.airlift:log:0.198'
    compile 'com.facebook.airlift:concurrent:0.198'
    compile 'com.facebook.airlift:configuration:0.198'
    compile 'com.facebook.airlift:log-manager:0.198'
    compile 'com.facebook.airlift:jaxrs:0.198'
    compile 'com.facebook.airlift:http-server:0.198'
    compile 'com.google.guava:guava:26.0-jre'
    compile 'com.google.inject:guice:4.2.2'
    compile 'com.amazonaws:aws-java-sdk-s3:1.11.871'
    compile 'com.amazonaws:aws-java-sdk-core:1.11.871'
    compile 'javax.ws.rs:javax.ws.rs-api:2.1'
    compile 'org.apache.avro:avro:1.8.1'
    compile 'com.opencsv:opencsv:4.6'
    compile 'net.sf.opencsv:opencsv:2.3'
    compile 'org.json:json:20190722'
    compile 'joda-time:joda-time:2.2'
    compile 'com.facebook.presto:presto-record-decoder:0.249'
    compile 'com.emc.ecs:object-client:3.1.3'
    compile 'io.pravega:schemaregistry-client:0.2.0'
    compile 'io.pravega:schemaregistry-contract:0.2.0'
    compile 'org.apache.parquet:parquet-hadoop:1.10.0'
    compile 'org.apache.parquet:parquet-column:1.10.0'
    compile 'org.weakref:jmxutils:1.19'
    compile 'com.facebook.presto:presto-parquet:0.249'
    compile 'com.facebook.presto:presto-memory-context:0.249'
    compile 'com.facebook.presto.hadoop:hadoop-apache2:2.7.4-8'
    compile 'javax.xml.bind:jaxb-api:2.2.11'
    compile 'com.sun.xml.bind:jaxb-core:2.2.11'
    compile 'com.sun.xml.bind:jaxb-impl:2.2.11'
    compile 'io.airlift:joda-to-java-time-bridge:3'
    compile 'org.slf4j:slf4j-simple:1.7.5'
    compile 'com.emc.ecs:smart-client:2.2.1'
    compile 'com.emc.ecs:object-transform:1.1.0'
    compile 'org.jdom:jdom2:2.0.6'
    compile 'io.pravega:schemaregistry-common:0.2.0'
    compile 'io.pravega:pravega-common:0.9.0'
    testImplementation 'com.facebook.presto:presto-tests:0.249'
    testImplementation 'org.eclipse.jetty:jetty-server:9.4.14.v20181114'
    testImplementation 'org.testng:testng:6.10'
    testImplementation 'com.facebook.airlift:testing:0.198'
    compile 'com.facebook.drift:drift-api:1.31'
    compile 'com.facebook.presto:presto-spi:0.249'
    compile 'io.airlift:slice:0.38'
    compile 'org.openjdk.jol:jol-core:0.2'
    compile 'io.airlift:units:1.3'
    compile 'com.facebook.presto:presto-common:0.249'
    compile 'com.facebook.presto:presto-main:0.249'
}

/*
    testImplementation "io.pravega:schemaregistry-common:${pravegaSchemaRegistryVersion}"
*/

group = 'com.facebook.presto'
version = '0.1.0'
description = 'S3 PrestoDB Connector'
sourceCompatibility = '1.8'

compileJava {
options.debug = true
options.debugOptions.debugLevel = 'lines,source'
options.deprecation = true
}

task copyDependentJars(type: Copy) {
    println configurations.compile
    from configurations.runtime
    into "$buildDir/plugin/libs/s3"
}

jar {
    baseName = 's3-connector'
    destinationDir = file("$buildDir/plugin/libs/s3")
    manifest {
        attributes "Main-Class": "com.facebook.presto.s3"
    }
}

plugins.withType(DistributionPlugin) {
    distTar {
        compression = Compression.GZIP
        extension = 'tar.gz'
    }
}

distributions {
    main {
        contents {
            distributionBaseName = 's3-presto-connector'
            from(project.configurations.runtime)
            from jar
        }
    }
}

task zip(type: Zip) {
    into "$buildDir/plugin/libs/s3"
    into (project.name + '-' + project.version)
}

def integration = project.hasProperty("integration")

test {
    maxHeapSize = "2048m"
    useTestNG() {
        suites "src/test/unit-test.xml"
        if (integration) {
            suites "src/test/integration-test.xml"
        }
    }
}

jar.dependsOn(copyDependentJars)
